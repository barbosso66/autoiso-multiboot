

function pathname { regexp -s 2:"$2" '^(\(.*\))?(/.*)$' "$1"; }
function devname  { regexp -s "$2" '^(\(.*\)).*$' "$1"; }

function loopback_dir_scan {
  lb_dir="$1"
  for ldir in ${config_directory}/"$lb_dir"/* ; do
    source "$ldir"/if.cfg
    if check_iso ; then
      lb_cfg="$ldir"/loopback.cfg
      return 0
    fi
  done
  return 1
}

function loopback_iso_entry {
  realdev="$1"
  isopath="$2"
  loopdev="$3"
  lb_cfg=""
  
  if test -f /boot/grub/loopback.cfg; then
    lb_cfg=/boot/grub/loopback.cfg
    loopback_dir_scan loopback_bad
  elif test -f /grub/loopback.cfg; then
    lb_cfg=/grub/loopback.cfg
    loopback_dir_scan loopback_bad
  else
    loopback_dir_scan loopback
  fi
  
  if test -z $lb_cfg ; then
    return 1
  fi
  
  echo loopback.cfg $isopath: yes

  menuentry "${finaloption_tab_str}${realdev}${isopath}" "$realdev" "$isopath" "$lb_cfg" {
    set iso_dev="$2"
    set iso_path="$3"
    set cfg_path="$4"

    export iso_dev
    export iso_path

    set loopname=loopdev_cfg
    
    while [ -d "(${loopname})/" ]; do
      set loopname=${loopname}_2
    done
    
    loopback $loopname "${iso_dev}${iso_path}"
    
    set root="(${loopname})"
    
    configfile $cfg_path
    loopback -d $loopname
  }
  return 0
}

function isolinux_iso_entry {
  realdev="$1"
  isopath="$2"
  loopdev="$3"

  if test -f /boot/isolinux/isolinux.cfg; then
    cfgpath=/boot/isolinux/isolinux.cfg
  elif test -f /isolinux/isolinux.cfg; then
    cfgpath=/isolinux/isolinux.cfg
  elif test -f /boot/x86_64/loader/isolinux.cfg; then
    cfgpath=/boot/x86_64/loader/isolinux.cfg
  else
    return 1;
  fi

  echo isolinux based $isopath: yes
  menuentry "$isopath (isolinux)" "$realdev" "$isopath" "$cfgpath" {
    set ="$2"
    set iso_path="$3"
    set cfg_path="$4"

    export iso_dev
    export iso_path

    set loopname=loopdev_cfg
    
    while [ -d "(${loopname})/" ]; do
      set loopname=${loopname}_2
    done
    
    loopback $loopname "${iso_dev}${iso_path}"
    
    set root="(${loopname})"
    
    # this flag requires a hacked grub!!

    # arch based
    probe -s root_uuid -u $iso_dev
    set linux_extra="${linux_extra} img_dev=/dev/disk/by-uuid/$root_uuid img_loop=$iso_path earlymodules=loop"

    gentoo based
    set linux_extra="${linux_extra} isofrom=$iso_path"

    # ubuntu based
    set linux_extra="${linux_extra} iso-scan/filename=$iso_path"

    # TODO: SUSE based
    #set linux_extra="${linux_extra} isofrom_device=/dev/sda1 isofrom_system=$iso_path"

    # others?
    set linux_extra="${linux_extra} isoboot=$iso_path"

    export linux_extra
    syslinux_configfile $cfgpath
    loopback -d $loopname

    }
    return 0
}

function scan_isos {
  isodirs="$*"
  
  for dev in (*) ; do
    regexp -s iso_device '\((.*)\)' $dev
    
    for dir in $isodirs; do
      for file in \
          (${iso_device})/${dir}/*.iso \
          (${iso_device})/${dir}/*.ISO \
      ; do
        if ! test -f "$file"; then continue; fi
        pathname $file isopath
          
        if test -z "$dev" -o -z "$isopath"; then continue; fi
        if ! loopback loopdev_scan "$file"; then continue; fi
        
        saved_root=$root
        set root=loopdev_scan
        
        if    loopback_iso_entry $dev $isopath (loopdev_scan); then true;
        #elif  isolinux_iso_entry $dev $isopath (loopdev_scan); then true;
        else  true; fi
        
        set root="${saved_root}"
        loopback -d loopdev_scan
      done
    done
  done
  return 0
}

insmod regexp
scan_isos boot-isos boot/boot-isos bootisos boot/bootisos
