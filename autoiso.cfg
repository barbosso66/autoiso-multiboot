

function pathname { regexp -s 2:"$2" '^(\(.*\))?(/.*)$' "$1"; }
function devname  { regexp -s "$2" '^(\(.*\)).*$' "$1"; }

function loopback_iso_entry {
  realdev="$1"
  isopath="$2"
  cfgpath="$3"
  
  echo loopback.cfg $isopath: yes

  menuentry "${finaloption_tab_str}${realdev}${isopath}" "$realdev" "$isopath" "$cfgpath" {
    set iso_dev="$2"
    set iso_path="$3"
    set cfg_path="$4"

    export iso_dev
    export iso_path

    set loopname=loopdev_cfg
    
    while [ -d "(${loopname})/" ]; do
      set loopname=${loopname}_2
    done
    
    loopback $loopname "${iso_dev}${iso_path}"
    
    set root="(${loopname})"
    
    configfile $cfg_path
    loopback -d $loopname
  }
}

function loopback_dir_scan {
  lb_dir="$1"
  for ldir in ${config_directory}/"$lb_dir"/* ; do
    source "$ldir"/if.cfg
    if check_iso ; then
      loopback_dir="$ldir"
      return 0
    fi
  done
  return 1
}

function scan_isos {
  isodirs="$*"
  
  for dev in (*) ; do
    regexp -s iso_device '\((.*)\)' $dev
    
    for dir in $isodirs; do
      for file in \
          (${iso_device})/${dir}/*.iso \
          (${iso_device})/${dir}/*.ISO \
      ; do
        if ! test -f "$file"; then continue; fi
        pathname $file isopath
          
        if test -z "$dev" -o -z "$isopath"; then continue; fi
        if ! loopback loopdev_scan "$file"; then continue; fi
        
        saved_root=$root
        set root=loopdev_scan
        
        for grub_dir in /boot/grub /grub ; do 
          if test -f "$grub_dir"/loopback.cfg ; then
            if loopback_dir_scan loopback_bad ; then
              loopback_iso_entry $dev $isopath "$loopback_dir"/loopback.cfg
            else
              loopback_iso_entry $dev $isopath "$grub_dir"/loopback.cfg
            fi
            set root=$saved_root
            loopback -d loopdev_scan
            continue 2
          fi
        done
        
        if loopback_dir_scan loopback ; then
          loopback_iso_entry $dev $isopath "$loopback_dir"/loopback.cfg
        fi
        
        set root="${saved_root}"
        loopback -d loopdev_scan
      done
    done
  done
  return 0
}

insmod regexp
scan_isos boot-isos boot/boot-isos bootisos boot/bootisos
